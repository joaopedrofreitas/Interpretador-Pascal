unit TOKENTYPE;

interface

type
  TokenT = (
    TT_END_OF_FILE,
    TT_ADD, TT_SUB, TT_MUL, TT_DIV, TT_MOD, TT_DIVINT,
    TT_OR, TT_AND, TT_NOT,
    TT_EQUAL, TT_DIFFERENCE, TT_GREATER, TT_GREATER_EQUAL,
    TT_LOWER, TT_LOWER_EQUAL, TT_ASSIGN,
    TT_PROGRAM, TT_VAR, TT_TYPE_INTEGER, TT_TYPE_REAL, TT_TYPE_STRING,
    TT_BEGIN, TT_END, TT_FOR, TT_TO, TT_WHILE, TT_DO,
    TT_BREAK, TT_CONTINUE, TT_IF, TT_ELSE, TT_THEN,
    TT_WRITE, TT_WRITELN, TT_READ, TT_READLN,
    TT_SEMICOLON, TT_COMMA, TT_PERIOD, TT_COLON,
    TT_OPEN_PARENTHESES, TT_CLOSE_PARENTHESES, TT_QUOTES,
    TT_VAR_NAME, TT_LITERAL_OCTAL, TT_LITERAL_DECIMAL,
    TT_LITERAL_HEX, TT_LITERAL_REAL, TT_LITERAL_STRING
  );

const
  TT_UNEXPECTED_EOF = -2;
  TT_INVALID_TOKEN  = -1;

implementation

end.

